name: PR Validation Workflow

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - content

jobs:
  validate-markdown:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Checkout the base branch
        uses: actions/checkout@v3
        with:
          ref: content  # Checkout the base branch (content)

      - name: Get list of files in BASE branch (content)
        id: base_files
        run: |
          BASE_FILES=$(find content -type f)  # Find all files in the content directory in the base branch
          echo "BASE_FILES=$BASE_FILES" >> $GITHUB_ENV  # Save the result as an environment variable

      - name: Checkout the head branch (pull request)
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}  # Checkout the pull request branch

      - name: Get list of files in HEAD branch (pull request)
        id: head_files
        run: |
          HEAD_FILES=$(find content -type f)  # Find all files in the content directory in the HEAD branch
          echo "HEAD_FILES=$HEAD_FILES" >> $GITHUB_ENV  # Save the result as an environment variable

      - name: Compare BASE and HEAD file lists
        run: |
          # Compare the two lists and print files that are in HEAD but not in BASE
          echo "Comparing files between BASE and HEAD..."

          # Get the list of files that exist in HEAD but not in BASE
          NEW_FILES=$(comm -13 <(echo "$BASE_FILES" | sort) <(echo "$HEAD_FILES" | sort))

          # Print out the new files that were added or modified in the HEAD branch
          echo "New or modified files in HEAD (the pull request branch):"
          echo "$NEW_FILES"
